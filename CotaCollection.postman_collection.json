{
	"info": {
		"_postman_id": "cd9a5d2a-15c3-4a1f-8650-9dc651ab381f",
		"name": "CotaCollection",
		"description": "Collection of API calls for COTA (Chelas Open TV Application).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetGroupSeriesSorted",
			"item": [
				{
					"name": "CreateGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1650e6c-3123-4586-b8e5-f767e977585c",
								"exec": [
									"const jsonData = JSON.parse(responseBody)",
									"postman.setEnvironmentVariable(\"groupID\", jsonData._id)",
									"",
									"pm.test('Should return inserted group.', function(){",
									"    const res = pm.response.json();",
									"    const req = JSON.parse(request.data)",
									"    pm.expect(res._id).to.be.a('number');",
									"    pm.expect(res.name).to.eql(req.name)",
									"    pm.expect(res.description).to.eql(req.description)",
									"    pm.expect(res).to.have.a.property('series')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Name\",\n\t\"description\": \"Description\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/groups",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "Creates a group"
					},
					"response": []
				},
				{
					"name": "AddSerieToGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "761ce0db-5973-4b0c-98fe-f8e9d6258aa4",
								"exec": [
									"var jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Should return group with serie added.', function() {",
									"    const res = pm.response.json();",
									"    const serie = res.series[res.series.length-1]",
									"    pm.expect(serie.name).to.be.a('string')",
									"    pm.expect(serie.id).to.be.a('number')",
									"    pm.expect(serie.popularity).to.be.a('number')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/groups/{{groupID}}/series/{{serie1}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"{{groupID}}",
								"series",
								"{{serie1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddSerieToGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "761ce0db-5973-4b0c-98fe-f8e9d6258aa4",
								"exec": [
									"var jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Should return group with serie added.', function() {",
									"    const res = pm.response.json();",
									"    const serie = res.series[res.series.length-1]",
									"    pm.expect(serie.name).to.be.a('string')",
									"    pm.expect(serie.id).to.be.a('number')",
									"    pm.expect(serie.popularity).to.be.a('number')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/groups/{{groupID}}/series/{{serie2}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"{{groupID}}",
								"series",
								"{{serie2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddSerieToGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "761ce0db-5973-4b0c-98fe-f8e9d6258aa4",
								"exec": [
									"var jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Should return group with serie added.', function() {",
									"    const res = pm.response.json();",
									"    const serie = res.series[res.series.length-1]",
									"    pm.expect(serie.name).to.be.a('string')",
									"    pm.expect(serie.id).to.be.a('number')",
									"    pm.expect(serie.popularity).to.be.a('number')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/groups/{{groupID}}/series/{{serie3}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"{{groupID}}",
								"series",
								"{{serie3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddSerieToGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "761ce0db-5973-4b0c-98fe-f8e9d6258aa4",
								"exec": [
									"var jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Should return group with serie added.', function() {",
									"    const res = pm.response.json();",
									"    const serie = res.series[res.series.length-1]",
									"    pm.expect(serie.name).to.be.a('string')",
									"    pm.expect(serie.id).to.be.a('number')",
									"    pm.expect(serie.popularity).to.be.a('number')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/groups/{{groupID}}/series/{{serie4}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"{{groupID}}",
								"series",
								"{{serie4}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddSerieToGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "761ce0db-5973-4b0c-98fe-f8e9d6258aa4",
								"exec": [
									"var jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Should return group with serie added.', function() {",
									"    const res = pm.response.json();",
									"    const serie = res.series[res.series.length-1]",
									"    pm.expect(serie.name).to.be.a('string')",
									"    pm.expect(serie.id).to.be.a('number')",
									"    pm.expect(serie.popularity).to.be.a('number')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/groups/{{groupID}}/series/{{serie5}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"{{groupID}}",
								"series",
								"{{serie5}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetGroupSeriesSorted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c38a2b2-3a22-4584-ac20-71b87a65d67b",
								"exec": [
									"pm.test(\"Should return sorted and filtered series from a group\", function(){",
									"    const res = pm.response.json();",
									"    let lastVote = -1",
									"    res.forEach(function(serie){",
									"        if(lastVote == -1)",
									"            lastVote = serie.vote_average",
									"        pm.expect(serie.vote_average).to.be.at.most(lastVote)",
									"        pm.expect(serie.vote_average).to.be.at.most(parseFloat(environment.max))",
									"        pm.expect(serie.vote_average).to.be.at.least(parseFloat(environment.min))",
									"    })",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/groups/{{groupID}}/series?min={{min}}&max={{max}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"{{groupID}}",
								"series"
							],
							"query": [
								{
									"key": "min",
									"value": "{{min}}"
								},
								{
									"key": "max",
									"value": "{{max}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GetPopular",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3afe8a60-d0d0-4b29-8ebb-c04ba4849cf3",
						"exec": [
							"pm.test(\"Should return sorted popular movies.\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(Object.keys(res).length).to.be.above(0)",
							"    res.forEach(function(movie){",
							"        pm.expect(movie.id).to.be.a('number')",
							"        pm.expect(movie.title).to.be.a('string')",
							"        pm.expect(movie.popularity).to.be.a('number')",
							"    })",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/popular",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"popular"
					]
				}
			},
			"response": []
		},
		{
			"name": "SearchSerie",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0e045112-9851-4602-ac87-0f77961be574",
						"exec": [
							"pm.test(\"Should return all series.\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.be.a('number')",
							"    pm.expect(res.name).to.be.a('string')",
							"    pm.expect(res.popularity).to.be.a('number')",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/tv/{{serie1}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"tv",
						"{{serie1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateGroup",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1650e6c-3123-4586-b8e5-f767e977585c",
						"exec": [
							"const jsonData = JSON.parse(responseBody)",
							"postman.setEnvironmentVariable(\"groupID\", jsonData._id)",
							"",
							"pm.test('Should return inserted group.', function(){",
							"    const res = pm.response.json();",
							"    const req = JSON.parse(request.data)",
							"    pm.expect(res._id).to.be.a('number');",
							"    pm.expect(res.name).to.eql(req.name)",
							"    pm.expect(res.description).to.eql(req.description)",
							"    pm.expect(res).to.have.a.property('series')",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Name\",\n\t\"description\": \"Description\"\n}"
				},
				"url": {
					"raw": "{{BASE_URL}}/groups",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"groups"
					]
				},
				"description": "Creates a group"
			},
			"response": []
		},
		{
			"name": "EditGroup",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd902f12-07d4-4c26-8974-f6a99d82df34",
						"exec": [
							"pm.test('Should return edited group.', function(){",
							"    const res = pm.response.json();",
							"    const req = JSON.parse(request.data)",
							"    pm.expect(res._id).to.eql(parseInt(environment.groupID));",
							"    pm.expect(res.name).to.eql(req.name)",
							"    pm.expect(res.description).to.eql(req.description)",
							"    pm.expect(res).to.have.a.property('series')",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"NameEdited\",\n\t\"description\": \"DescriptionEdited\"\n}"
				},
				"url": {
					"raw": "{{BASE_URL}}/groups/{{groupID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"groups",
						"{{groupID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllGroups",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35b3cb7b-b260-4f38-89f9-e2460d414ff6",
						"exec": [
							"pm.test(\"Should return all groups\", function(){",
							"    const res = pm.response.json();",
							"    res.forEach(function(group){",
							"      pm.expect(group._id).to.be.a('number')",
							"      pm.expect(group.name).to.exist",
							"      pm.expect(group.description).to.exist",
							"      pm.expect(group.series).to.exist",
							"    })",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/groups",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetGroup",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a28ab700-418e-431f-86b1-0becb77b26db",
						"exec": [
							"pm.test('Should return the requested group.', function(){",
							"    const res = pm.response.json();",
							"    pm.expect(res._id).to.be.a('number');",
							"    pm.expect(res.name).to.exist",
							"    pm.expect(res.description).to.exist",
							"    pm.expect(res).to.have.a.property('series')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/groups/{{groupID}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"groups",
						"{{groupID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddSerieToGroup",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "761ce0db-5973-4b0c-98fe-f8e9d6258aa4",
						"exec": [
							"var jsonData = JSON.parse(responseBody)",
							"",
							"pm.test('Should return group with serie added.', function() {",
							"    const res = pm.response.json();",
							"    const serie = res.series[res.series.length-1]",
							"    pm.expect(serie.name).to.be.a('string')",
							"    pm.expect(serie.id).to.be.a('number')",
							"    pm.expect(serie.popularity).to.be.a('number')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/groups/{{groupID}}/series/{{serie1}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"groups",
						"{{groupID}}",
						"series",
						"{{serie1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "RemoveSerieFromGroup",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a2448fbf-b8ce-4f78-b90a-b1f53e53df7d",
						"exec": [
							"pm.test('Should return group with serue removed.', function(){",
							"    const res = pm.response.json();",
							"    res.series.forEach(function(serie){",
							"        pm.expect(serie.name).to.not.eql(environment.serie)",
							"    })",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/groups/{{groupID}}/series/{{serie1}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"groups",
						"{{groupID}}",
						"series",
						"{{serie1}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6a170de1-cfc4-4f49-b49d-aafbd06b1eb3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "51fa5c7b-f1cf-4286-b698-3b3ebbfeea10",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "614093c2-1684-45d4-a80a-6b7a4a212555",
			"key": "BASE_URL",
			"value": "http://localhost:8000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}